mode: 0644
path: {{ if gt (len (cloudPlatformAPIIntLoadBalancerIPs .)) 0 -}} "/etc/kubernetes/manifests/coredns.yaml" {{ else }} "/etc/kubernetes/disabled-manifests/coredns.yaml" {{ end }}
contents:
  inline: |
    kind: Pod
    apiVersion: v1
    metadata:
      name: coredns
      namespace: openshift-cloud-platform-infra
      creationTimestamp:
      deletionGracePeriodSeconds: 65
      labels:
        app: cloud-platform-infra-coredns
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    spec:
      volumes:
      - name: resource-dir
        hostPath:
          path: "/etc/kubernetes/static-pod-resources/coredns"
      - name: kubeconfig
        hostPath:
          path: "/var/lib/kubelet"
      - name: conf-dir
        hostPath:
          path: "/etc/coredns"
      initContainers:
      - name: render-config-coredns
        image: {{ .Images.baremetalRuntimeCfgImage }}
        command:
        - runtimecfg
        - render
        - "/var/lib/kubelet/kubeconfig"
        - "--cloud-ext-lb-ips"
        - "{{- range $index, $ip := cloudPlatformAPILoadBalancerIPs .}}{{ if gt $index 0 }},{{end}}{{$ip}}{{end}}"
        - "--cloud-int-lb-ips"
        - "{{- range $index, $ip := cloudPlatformAPIIntLoadBalancerIPs .}}{{ if gt $index 0 }},{{end}}{{$ip}}{{end}}"
        - "--cloud-ingress-lb-ips"
        - "{{- range $index, $ip := cloudPlatformIngressLoadBalancerIPs .}}{{ if gt $index 0 }},{{end}}{{$ip}}{{end}}"
        - "/config"
        - "--out-dir"
        - "/etc/coredns"
        resources: {}
        volumeMounts:
        - name: kubeconfig
          mountPath: "/var/lib/kubelet"
          mountPropagation: HostToContainer
        - name: resource-dir
          mountPath: "/config"
          mountPropagation: HostToContainer
        - name: conf-dir
          mountPath: "/etc/coredns"
          mountPropagation: HostToContainer
        imagePullPolicy: IfNotPresent
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: coredns
        securityContext:
          privileged: true
        image: {{.Images.corednsImage}}
        args:
        - "--conf"
        - "/etc/coredns/Corefile"
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: conf-dir
          mountPath: "/etc/coredns"
        livenessProbe:
          httpGet:
            path: /health
            port: 18080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        terminationMessagePolicy: FallbackToLogsOnError
        imagePullPolicy: IfNotPresent
      - name: coredns-monitor
        securityContext:
          privileged: true
        image: {{ .Images.baremetalRuntimeCfgImage }}
        command:
        - corednsmonitor
        - "/var/lib/kubelet/kubeconfig"
        - "/config/Corefile.tmpl"
        - "/etc/coredns/Corefile"
        - "--cloud-ext-lb-ips"
        - "{{- range $index, $ip := cloudPlatformAPILoadBalancerIPs .}}{{ if gt $index 0 }},{{end}}{{$ip}}{{end}}"
        - "--cloud-int-lb-ips"
        - "{{- range $index, $ip := cloudPlatformAPIIntLoadBalancerIPs .}}{{ if gt $index 0 }},{{end}}{{$ip}}{{end}}"
        - "--cloud-ingress-lb-ips"
        - "{{- range $index, $ip := cloudPlatformIngressLoadBalancerIPs .}}{{ if gt $index 0 }},{{end}}{{$ip}}{{end}}"
        resources:
          requests:
            cpu: 100m
            memory: 200Mi          
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: kubeconfig
          mountPath: "/var/lib/kubelet"
          mountPropagation: HostToContainer
        - name: resource-dir
          mountPath: "/config"
          mountPropagation: HostToContainer
        - name: conf-dir
          mountPath: "/etc/coredns"
          mountPropagation: HostToContainer
        imagePullPolicy: IfNotPresent        
      hostNetwork: true
      tolerations:
      - operator: Exists
      priorityClassName: system-node-critical
    status: {}
